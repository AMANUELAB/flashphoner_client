<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2011 Flashphoner
All rights reserved. This Code and the accompanying materials
are made available under the terms of the GNU Public License v2.0
which accompanies this distribution, and is available at
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html

Contributors:
    Flashphoner - initial API and implementation

This code and accompanying materials also available under LGPL and MPL license for Flashphoner buyers. Other license versions by negatiation. Write us support@flashphoner.com with any questions.
-->
<mx:Panel 
	xmlns:mx="http://www.adobe.com/2006/mxml"  
	width="142" height="24" layout="absolute" isPopUp="true" backgroundAlpha="0.0" cornerRadius="0" alpha="1.0" >
	<mx:Script>
		<![CDATA[
			import com.flashphoner.api.Call;
			import com.flashphoner.phone.DataPhone;
			
			import mx.binding.utils.ChangeWatcher;
			public var isHold:Boolean = false;		
			
			override public function set data( value:Object ) : void {
				if (data == null || (data as Call).id != (value as Call).id){
					textUser.setStyle("backgroundColor",0x757575);
					buttonHold.setStyle("fillColors",[0xdeeeff, 0xa5ccff, 0xb7dbff, 0x4a8acb]);
					isHold = false;
				}
				super.data = value;
			}
				
			private function onClickTransfer():void{
				var call:Call = data as Call;
				DataPhone.getInstance().viewController.showTransferView(call);
			}
			
			private function onClickHold():void{
				(data as Call).setStatusHold(!isHold);
			}
			
			private function onClickHangup():void{
				(data as Call).hangup();
			}

			public function iHolded(isHold:Boolean):void{
				this.isHold = isHold;
				if (isHold){
					buttonHold.setStyle("fillColors",[0xffffde, 0xfaffa5, 0xf7ffb7, 0xcbbd4a]);
				}else{
					buttonHold.setStyle("fillColors",[0xdeeeff, 0xa5ccff, 0xb7dbff, 0x4a8acb]);
				}
			}
			public function callHolded():void{
				textUser.setStyle("backgroundColor",0xb3b3b3);
			}
			
			public function callUnholded():void{
				textUser.setStyle("backgroundColor",0x757575);
			}
			
		]]>
	</mx:Script>

	<mx:TextInput id="textUser" text="{(data as Call).anotherSideUser}" x="0" y="0" color="#E1E1E1" width="142" height="24" cornerRadius="12" borderStyle="solid" borderColor="#757575" themeColor="#757575" fontFamily="Arial" fontSize="12" backgroundColor="#757575" borderThickness="1" editable="false"/>
	<mx:Button id="buttonTransfer" click="onClickTransfer()" x="85" y="4" label="-&gt;" height="16" fontSize="8" cornerRadius="8" fillAlphas="[1.0, 1.0]" fillColors="[#DEEEFF, #A5CCFF, #B7DBFF, #4A8ACB]" width="16" fontWeight="bold" borderColor="#C1CFE1" alpha="1.0" toolTip="Transfer call to..." themeColor="#86A3C1"/>
	<mx:Button id="buttonHold" click="onClickHold()" x="103.65" y="4" label="| |" height="16" fontSize="8" cornerRadius="8" fillAlphas="[1.0, 1.0]" fillColors="[#DEEEFF, #A5CCFF, #B7DBFF, #4A8ACB]" width="16" fontWeight="bold" borderColor="#C1CFE1" alpha="1.0" toolTip="Hold on" themeColor="#86A3C1"/>
	<mx:Button id="buttonHangup" click="onClickHangup()" x="122" y="4" label="X" height="16" fontSize="8" cornerRadius="8" fillAlphas="[1.0, 1.0]" fillColors="[#FF7D7D, #FF4141, #FF7D7D, #FF4141]" width="16" fontWeight="bold" borderColor="#FF8181" alpha="1.0" toolTip="Hold on" themeColor="#FF8181"/>
	
</mx:Panel>
