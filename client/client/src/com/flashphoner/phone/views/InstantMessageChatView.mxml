<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2011 Flashphoner
All rights reserved. This Code and the accompanying materials
are made available under the terms of the GNU Public License v2.0
which accompanies this distribution, and is available at
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html

Contributors:
    Flashphoner - initial API and implementation

This code and accompanying materials also available under LGPL and MPL license for Flashphoner buyers. Other license versions by negatiation. Write us support@flashphoner.com with any questions.
-->
<mx:Panel xmlns:ctrl="com.flashphoner.*"
		  xmlns:mx="http://www.adobe.com/2006/mxml" 
		  width="160" height="200" 
		  layout="absolute" 
		  borderStyle="none" 
		  cornerRadius="0" 
		  creationComplete="onCreationComplete()">
		  	<!-- borderThickness="1" 
			borderColor="#9D9D9D" 
			width="220" height="207" -->
	
	<mx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.flashphoner.Logger;
			import com.flashphoner.api.Flash_API;
			import com.flashphoner.api.InstantMessage;
			import com.flashphoner.phone.DataPhone;
			import com.flashphoner.util.HashMap;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.utils.UIDUtil;
			
			private var toUser:String;
			private var messages:HashMap = new HashMap();
			
			public function init(toUser:String):void{							
				this.toUser = toUser;
				this.label = toUser;
			}
			private function onCreationComplete():void{
				bodyTextArea.addEventListener(KeyboardEvent.KEY_UP,checkKey,false);
			}		
			
			private function checkKey(event:KeyboardEvent):void
			{
				if(event.charCode == 13){
					sendInstantMessage();
				}
			}			
					
			public function sendInstantMessage():void{				
				var contentType:String="text/plain";
				var body:String = bodyTextArea.text;
				bodyTextArea.text="";
				
				var instantMessage:InstantMessage = new InstantMessage();
				instantMessage.to = toUser;
				instantMessage.body = body;
				instantMessage.contentType = contentType;
				instantMessage.id = UIDUtil.createUID();
				messages.put(instantMessage.id,instantMessage);
				
				DataPhone.getInstance().flash_API.sendInstantMessage(instantMessage);
			}
			
			public function  pushMessage(messageObject:Object):void {
				var failNotification:String = (messageObject["state"]=="FAILED")?"[MESSAGE FAIL] ":" ";
				var body:String;
				if (messageObject.state=="ACCEPTED" || messageObject.state=="FAILED"){
					body = messages.getValue(messageObject.id).body;
				}else if (messageObject.state=="RECEIVED"){
					body = messageObject.body;
				}else{
					Logger.error("Unknown message state: "+messageObject.state);
				}				
								
				chatTextArea.htmlText = messageObject["from"]+": "+failNotification+body+"\n"+chatTextArea.htmlText;		
			
			}			
			 
		]]>
	</mx:Script>
	
	<mx:TextArea id="chatTextArea" width="160" height="163" x="0" y="0" editable="false" borderStyle="none"/>
	<mx:TextInput id="bodyTextArea" x="6" y="169" width="148" height="24" cornerRadius="0"/>
</mx:Panel>
