<?xml version="1.0" encoding="utf-8"?>
<!--
Copyright (c) 2011 Flashphoner
All rights reserved. This Code and the accompanying materials
are made available under the terms of the GNU Public License v2.0
which accompanies this distribution, and is available at
http://www.gnu.org/licenses/old-licenses/gpl-2.0.html

Contributors:
    Flashphoner - initial API and implementation

This code and accompanying materials also available under LGPL and MPL license for Flashphoner buyers. Other license versions by negatiation. Write us support@flashphoner.com with any questions.
-->
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:ctrl="com.flashphoner.api.communication.*" 
	xmlns:phone="com.flashphoner.phone.views.*"
	width="220" height="290" creationComplete="init()" layout="absolute" verticalScrollPolicy="off" horizontalScrollPolicy="off"
	backgroundImage="assets/background_phone.png"  backgroundGradientAlphas="[1.0, 1.0]">
    <mx:Style source="styles/style.css"/>
    <mx:Script>
        <![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import com.flashphoner.Logger;
			import com.flashphoner.api.Flash_API;
			import com.flashphoner.api.data.PhoneConfig;
			import com.flashphoner.api.PhoneSpeaker;
			import com.flashphoner.api.SoundControl;
			import com.flashphoner.phone.APINotifyPhone;
			import com.flashphoner.phone.DataPhone;
			import com.flashphoner.phone.views.InfoView;
			
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.managers.PopUpManagerChildList;

			private var infoView:InfoView = new InfoView();
			
        	private var count:int=0;
			
			private var initTimer:Timer;
        	
			[Bindable]
			var flash_API:Flash_API = DataPhone.getInstance().flash_API;
			
        	private function init():void
        	{	
				DataPhone.getInstance().listCalls = listCalls;
				startTimer();
        	}  
			
			private function startTimer():void{
				if (initTimer!=null){
					initTimer.stop();
					DataPhone.getInstance().viewController.hideConnectingView();
				} else {
					initTimer = new Timer(500);
					initTimer.addEventListener(TimerEvent.TIMER,checkState);
					DataPhone.getInstance().viewController.showConnectingView();
				}
				initTimer.start();	
			}	
			
			private function dropTimer():void{
				if (initTimer!=null){
					initTimer.stop();
					initTimer.removeEventListener(TimerEvent.TIMER,checkState);
					initTimer=null;
					var token:String;
					try{
						if (Application.application.parameters != null && Application.application.parameters.token!=null){
							token = Application.application.parameters.token;
						}
					} catch (e:Error){
						token = "";
					}       			
					if (token != null && token.length > 0){
						DataPhone.getInstance().viewController.showConnectingView();
						DataPhone.getInstance().flash_API.loginByToken(token);
					}else{
						DataPhone.getInstance().viewController.hideConnectingView();
					}					
				}
			}
			
			private function checkState(event:TimerEvent = null):void{
				if (flash_API.isInitialized()){
					Logger.info("FlashAPI has been initialized");
					flash_API.initMedia();
					dropTimer();					
				}
			}
			
			private function onOpenInstantMessageChatView():void{
				if (!flash_API.modelLocator.logged){
					phone(Application.application).onOpenSipAccountView();
					return;
				}
				var callee:String = mainView.callee.text;
				if (((callee != null) && (callee.length > 0)) || (DataPhone.getInstance().tabChatView.size() > 0)){
					PopUpManager.addPopUp(DataPhone.getInstance().tabChatView,this);
					PopUpManager.centerPopUp(DataPhone.getInstance().tabChatView);
					if ((callee != null) && (callee.length > 0)){
						DataPhone.getInstance().tabChatView.addTab(callee);
					}
				}else{				
					infoView.text = "Enter callee";
					PopUpManager.addPopUp(infoView,DisplayObject(Application.application),true);
					PopUpManager.centerPopUp(infoView);
				}
			}
	        
        	private function onOpenMicrophoneSettingsView():void{
        		flash_API.soundControl.setLoopBack(true);
        		PopUpManager.addPopUp(DataPhone.getInstance().microphoneSettingsView,this);
        		PopUpManager.centerPopUp(DataPhone.getInstance().microphoneSettingsView);
        	}
        	public function onOpenSipAccountView():void{
        		if (loginButton.text == "Log in"){
					var token:String;
					try{
						if (Application.application.parameters != null && Application.application.parameters.token!=null){
							token = Application.application.parameters.token;
						}
					} catch (e:Error){
						token = "";
					}       			
					if (token != null && token.length > 0){
						DataPhone.getInstance().viewController.showConnectingView();
						DataPhone.getInstance().flash_API.loginByToken(token);
					}else{
						PopUpManager.addPopUp(DataPhone.getInstance().sipAccountView,this);
						PopUpManager.centerPopUp(DataPhone.getInstance().sipAccountView);
					}
        		}else{
        			logout();
        		}
        	}
			public function toLoggedState():void{
				loginButton.text="Log out";
			}
			
			public function toLoggedOffState():void{
				loginButton.text="Log in";
			}
			private function logout():void{
				DataPhone.getInstance().flash_API.logoff();
				toLoggedOffState();
			}
			
			public function onOpenVideoView():void{
				videoView.init();
			}
			
        ]]>       
    </mx:Script>  
<mx:Panel width="100%" height="100%" layout="absolute" cornerRadius="0" backgroundAlpha="0.0" verticalScrollPolicy="off" horizontalScrollPolicy="off">
	<phone:MainView id="mainView" cornerRadius="0" top="14" horizontalCenter="0"/>
	<mx:List id="listCalls" 
			 width="149"
			 dataProvider="{flash_API.calls}"
			 backgroundAlpha="0.0"
			 borderThickness="0"
			 rowCount="2" itemRenderer="com.flashphoner.phone.views.CallView" x="36" y="54.15" height="71">
	</mx:List>
	<mx:Label text="{flash_API.modelLocator.login}" textAlign="right" fontSize="12" color="#B0B0B0" fontWeight="bold" top="-2" right="34"/>
	<mx:Label id="loginButton" x="34" text="Log in" textAlign="left" fontSize="12" color="#B0B0B0" visible="true" fontWeight="bold" top="-2" click="onOpenSipAccountView()"/>
	<mx:Button x="186" y="15" label="Vid" click="onOpenVideoView()" height="24" fontSize="10" cornerRadius="12" fillAlphas="[1.0, 1.0]" fillColors="[#DEEEFF, #A5CCFF, #B7DBFF, #4A8ACB]" width="24" borderColor="#C1CFE1" alpha="0.65" themeColor="#86A3C1" toolTip="Open video window"/>
	<mx:Button x="186" y="41" label="Mic" click="onOpenMicrophoneSettingsView()" height="24" fontSize="10" cornerRadius="12" fillAlphas="[1.0, 1.0]" fillColors="[#DEEEFF, #A5CCFF, #B7DBFF, #4A8ACB]" width="24" borderColor="#C1CFE1" alpha="0.65" themeColor="#86A3C1" toolTip="Mic settings"/>
	<mx:Button x="186" y="67" label="IM" click="onOpenInstantMessageChatView()" height="24" fontSize="10" cornerRadius="12" fillAlphas="[1.0, 1.0]" fillColors="[#DEEEFF, #A5CCFF, #B7DBFF, #4A8ACB]" width="24" borderColor="#C1CFE1" alpha="0.65" themeColor="#86A3C1" toolTip="IM chat"/>
	<phone:VideoView id="videoView" visible="false" x="13" y="26"/>
</mx:Panel>

        
</mx:Application>
